CPPFLAGS += -I. -D__SCLE
CFLAGS   += -O2 -Wall -g --target=x86_64-elf -mcmodel=large
CXXFLAGS += -O2 -Wall -g --target=x86_64-elf -mcmodel=large \
            -fno-exceptions -fno-rtti -std=c++23
LDFLAGS += -z norelro --image-base 0xffff800000000000 --static

include ../Makefile.conf
TARGET := $(TARGET_DIR)/$(TARGET)

SRC_DIR := .
SRC_FILES := $(shell find $(SRC_DIR) -name '*.c' -or -name '*.cpp' -or -name '*.asm')

OBJS += $(patsubst $(SRC_DIR)/%.c,  $(TARGET_DIR)/%.o,$(filter %.c,  $(SRC_FILES))) \
        $(patsubst $(SRC_DIR)/%.cpp,$(TARGET_DIR)/%.o,$(filter %.cpp,$(SRC_FILES))) \
        $(patsubst $(SRC_DIR)/%.asm,$(TARGET_DIR)/%.o,$(filter %.asm,$(SRC_FILES)))

# common (src/apps)
SRC_COMMON_DIR := ..
SRC_COMMON_FILES := $(shell find $(SRC_COMMON_DIR) -maxdepth 1 -name '*.c' -or -name '*.cpp' -or -name '*.asm')

OBJS += $(patsubst $(SRC_COMMON_DIR)/%.c,  $(TARGET_DIR)/%.o,$(filter %.c,  $(SRC_COMMON_FILES))) \
        $(patsubst $(SRC_COMMON_DIR)/%.cpp,$(TARGET_DIR)/%.o,$(filter %.cpp,$(SRC_COMMON_FILES))) \
        $(patsubst $(SRC_COMMON_DIR)/%.asm,$(TARGET_DIR)/%.o,$(filter %.asm,$(SRC_COMMON_FILES)))

.PHONY: all
all: setup $(TARGET)

.PHONY: setup
setup:
	mkdir -p $(TARGET_DIR)

$(TARGET): $(OBJS) Makefile
	$(LD) $(LDFLAGS) -o $@ $(OBJS) -lc -lc++ -lc++abi -lm

$(TARGET_DIR)/%.o: %.c Makefile
	$(CC) $(CPPFLAGS) $(CFLAGS) -c $< -o $@

$(TARGET_DIR)/%.o: %.cpp Makefile
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $< -o $@

$(TARGET_DIR)/%.o: %.asm Makefile
	nasm -f elf64 -o $@ $<

# common

$(TARGET_DIR)/%.o: $(SRC_COMMON_DIR)/%.c Makefile
	$(CC) $(CPPFLAGS) $(CFLAGS) -c $< -o $@

$(TARGET_DIR)/%.o: $(SRC_COMMON_DIR)/%.cpp Makefile
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $< -o $@

$(TARGET_DIR)/%.o: $(SRC_COMMON_DIR)/%.asm Makefile
	nasm -f elf64 $< -o $@
